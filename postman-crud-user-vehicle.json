{
	"info": {
		"_postman_id": "3b38221b-c012-45a2-94c7-a14d5450898c",
		"name": "REST API basics: CRUD, test & variable",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27168335"
	},
	"item": [
		{
			"name": "vehicle",
			"item": [
				{
					"name": "add vehicle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"vehicle_name\":\"audi\",\n    \"vehicle_brand\":\"audi\",\n    \"vehicle_number\":\"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/vehicles/createVehicle",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"vehicles",
								"createVehicle"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": [
						{
							"name": "register user Copy",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"vehicle_name\":\"audi\",\n    \"vehicle_brand\":\"audi\",\n    \"vehicle_number\":\"123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/vehicles/createVehicle",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"vehicles",
										"createVehicle"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Resource-Policy",
									"value": "same-origin"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "154"
								},
								{
									"key": "ETag",
									"value": "W/\"9a-20wtACfu9YFz3DgFSCHB0B7LLTs\""
								},
								{
									"key": "Date",
									"value": "Fri, 23 Feb 2024 18:58:19 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"vehicle_name\": \"audi\",\n    \"vehicle_brand\": \"audi\",\n    \"vehicle_number\": \"123\",\n    \"updatedAt\": \"2024-02-23T18:58:19.419Z\",\n    \"createdAt\": \"2024-02-23T18:58:19.419Z\"\n}"
						}
					]
				},
				{
					"name": "get vehicles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"vehicle_name\":\"audi\",\n    \"vehicle_brand\":\"audi\",\n    \"vehicle_number\":\"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/vehicles/getVehicles?search=",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"vehicles",
								"getVehicles"
							],
							"query": [
								{
									"key": "search",
									"value": ""
								}
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": [
						{
							"name": "register user Copy 2",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"vehicle_name\":\"audi\",\n    \"vehicle_brand\":\"audi\",\n    \"vehicle_number\":\"123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/vehicles/getVehicles?search=",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"vehicles",
										"getVehicles"
									],
									"query": [
										{
											"key": "search",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Resource-Policy",
									"value": "same-origin"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "825"
								},
								{
									"key": "ETag",
									"value": "W/\"339-sKCdEpHVR1QgV10j0jQEAMrWVU4\""
								},
								{
									"key": "Date",
									"value": "Fri, 23 Feb 2024 19:50:45 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"totalItems\": 5,\n    \"totalPages\": 1,\n    \"currentPage\": 1,\n    \"vehicles\": [\n        {\n            \"id\": 1,\n            \"vehicle_name\": \"audi\",\n            \"vehicle_brand\": \"audi\",\n            \"vehicle_number\": 123,\n            \"createdAt\": \"2024-02-23T19:50:07.000Z\",\n            \"updatedAt\": \"2024-02-23T19:50:07.000Z\"\n        },\n        {\n            \"id\": 2,\n            \"vehicle_name\": \"audi\",\n            \"vehicle_brand\": \"audi\",\n            \"vehicle_number\": 123,\n            \"createdAt\": \"2024-02-23T19:50:40.000Z\",\n            \"updatedAt\": \"2024-02-23T19:50:40.000Z\"\n        },\n        {\n            \"id\": 3,\n            \"vehicle_name\": \"audi\",\n            \"vehicle_brand\": \"audi\",\n            \"vehicle_number\": 123,\n            \"createdAt\": \"2024-02-23T19:50:41.000Z\",\n            \"updatedAt\": \"2024-02-23T19:50:41.000Z\"\n        },\n        {\n            \"id\": 4,\n            \"vehicle_name\": \"audi\",\n            \"vehicle_brand\": \"audi\",\n            \"vehicle_number\": 123,\n            \"createdAt\": \"2024-02-23T19:50:42.000Z\",\n            \"updatedAt\": \"2024-02-23T19:50:42.000Z\"\n        },\n        {\n            \"id\": 5,\n            \"vehicle_name\": \"audi\",\n            \"vehicle_brand\": \"audi\",\n            \"vehicle_number\": 123,\n            \"createdAt\": \"2024-02-23T19:50:42.000Z\",\n            \"updatedAt\": \"2024-02-23T19:50:42.000Z\"\n        }\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "vehicle ownership",
			"item": [
				{
					"name": "add user vehicle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": 7,\n    \"vehicleId\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/addVehicle",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"addVehicle"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": [
						{
							"name": "register user Copy",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": 7,\n    \"vehicleId\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/addVehicle",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"addVehicle"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Resource-Policy",
									"value": "same-origin"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "48"
								},
								{
									"key": "ETag",
									"value": "W/\"30-QvPKw3mehLYEuMTmed64oe3RVVw\""
								},
								{
									"key": "Date",
									"value": "Fri, 23 Feb 2024 19:51:28 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Vehicle added to user successfully\"\n}"
						}
					]
				},
				{
					"name": "get user vehicle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"vehicle_name\":\"audi\",\n    \"vehicle_brand\":\"audi\",\n    \"vehicle_number\":\"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/getUserVehicle/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"getUserVehicle",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "7"
								}
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": [
						{
							"name": "get user vehicle",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"vehicle_name\":\"audi\",\n    \"vehicle_brand\":\"audi\",\n    \"vehicle_number\":\"123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/getUserVehicle/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"getUserVehicle",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "7"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Resource-Policy",
									"value": "same-origin"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "683"
								},
								{
									"key": "ETag",
									"value": "W/\"2ab-Prx0iyp8f3SV4dauiBCtapuyVTM\""
								},
								{
									"key": "Date",
									"value": "Fri, 23 Feb 2024 19:55:35 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"vehicle_id\": 1,\n        \"user_id\": 7,\n        \"isCreated\": 1,\n        \"isDeleted\": 0,\n        \"createdAt\": \"2024-02-23T19:51:24.000Z\",\n        \"updatedAt\": \"2024-02-23T19:51:24.000Z\",\n        \"vehicle.id\": 1,\n        \"vehicle.vehicle_name\": \"audi\",\n        \"vehicle.vehicle_brand\": \"audi\",\n        \"vehicle.vehicle_number\": 123,\n        \"vehicle.createdAt\": \"2024-02-23T19:50:07.000Z\",\n        \"vehicle.updatedAt\": \"2024-02-23T19:50:07.000Z\"\n    },\n    {\n        \"id\": 4,\n        \"vehicle_id\": 2,\n        \"user_id\": 7,\n        \"isCreated\": 1,\n        \"isDeleted\": 0,\n        \"createdAt\": \"2024-02-23T19:55:31.000Z\",\n        \"updatedAt\": \"2024-02-23T19:55:31.000Z\",\n        \"vehicle.id\": 4,\n        \"vehicle.vehicle_name\": \"audi\",\n        \"vehicle.vehicle_brand\": \"audi\",\n        \"vehicle.vehicle_number\": 123,\n        \"vehicle.createdAt\": \"2024-02-23T19:50:42.000Z\",\n        \"vehicle.updatedAt\": \"2024-02-23T19:50:42.000Z\"\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImhtbGFhIiwiaWF0IjoxNzA4MDgzNzcyLCJleHAiOjE3MDgwODczNzJ9.eEKYlkYYYYFSmENh0zvW6UsMcybZq_i4l-s2y7k2KzI",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"hmlaa\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/deleteUser/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"deleteUser",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "0"
								}
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "Delete user",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIsImVtYWlsIjoiaGVtaWwubW9kaTIwMThAZ21haWwuY29tIiwiaWF0IjoxNzA4NzE3NjIyLCJleHAiOjE3MDg3MjEyMjJ9.m6LgIsBkq_GUJqWOFi1TkEhCHp5yz_JkiGGXInzg6dI",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"hmlaa\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/deleteUser/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"deleteUser",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "12"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Resource-Policy",
									"value": "same-origin"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "39"
								},
								{
									"key": "ETag",
									"value": "W/\"27-27o4zzUjhHNmthTJyia4gBCjpos\""
								},
								{
									"key": "Date",
									"value": "Fri, 23 Feb 2024 19:48:01 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User deleted successfully\"\n}"
						}
					]
				},
				{
					"name": "Update data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywiZW1haWwiOiJoZW1pbC5tb2RpMjAxMjIzMkBnbWFpbC5jb20iLCJpYXQiOjE3MDg3MTMyNDMsImV4cCI6MTcwODcxNjg0M30.06xVWGA1fnLinafukJJPdfjeZ1WwhJs8R0wjiNhWVQ0",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/updateUser/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"updateUser",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "7"
								}
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "Update data",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTMsImVtYWlsIjoiaGVtaWwubW9kaTIwMThAZ21haWwuY29tIiwiaWF0IjoxNzA4NzE3NzEwLCJleHAiOjE3MDg3MjEzMTB9.MaAdB4UpNY46RtYM-QpxWCG-kZnCX8jdOcfSUyX5gzc",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":\"john\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/updateUser/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"updateUser",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "13"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Resource-Policy",
									"value": "same-origin"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "3"
								},
								{
									"key": "ETag",
									"value": "W/\"3-9imuRLez3P7URNNj5ibt9BHsaag\""
								},
								{
									"key": "Date",
									"value": "Fri, 23 Feb 2024 19:49:00 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    1\n]"
						}
					]
				},
				{
					"name": "register user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\":\"hemil.modi2018@gmail.com\",\n    \"name\":\"hemil\",\n    \"surname\":\"modi\",\n    \"password\":\"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/createUser",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"createUser"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": [
						{
							"name": "register user",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\":\"hemil.modi2018@gmail.com\",\n    \"name\":\"hemil\",\n    \"surname\":\"modi\",\n    \"password\":\"123456\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/createUser",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"createUser"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Resource-Policy",
									"value": "same-origin"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "359"
								},
								{
									"key": "ETag",
									"value": "W/\"167-CAXlP9hWMkzmII0zXp4wUlW4c3Q\""
								},
								{
									"key": "Date",
									"value": "Fri, 23 Feb 2024 19:46:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"user\": {\n        \"id\": 12,\n        \"name\": \"hemil\",\n        \"surname\": \"modi\",\n        \"email\": \"hemil.modi2018@gmail.com\",\n        \"updatedAt\": \"2024-02-23T19:46:33.445Z\",\n        \"createdAt\": \"2024-02-23T19:46:33.445Z\"\n    },\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIsImVtYWlsIjoiaGVtaWwubW9kaTIwMThAZ21haWwuY29tIiwiaWF0IjoxNzA4NzE3NTkzLCJleHAiOjE3MDg3MjExOTN9.KTBxMSns5MSNdnRVwKL7RjxR2lX3vnYbRJp1REMgN94\"\n}"
						}
					]
				},
				{
					"name": "login user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"hmlaaa\",\r\n    \"password\":\"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": [
						{
							"name": "login user",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\":\"hemil.modi2018@gmail.com\",\r\n    \"password\":\"123456\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/userLogin",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"userLogin"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Resource-Policy",
									"value": "same-origin"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "462"
								},
								{
									"key": "ETag",
									"value": "W/\"1ce-Poe96lROAvcbwTjrPNxXlL918Lo\""
								},
								{
									"key": "Date",
									"value": "Fri, 23 Feb 2024 19:47:02 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"user\": {\n        \"id\": 12,\n        \"name\": \"hemil\",\n        \"surname\": \"modi\",\n        \"email\": \"hemil.modi2018@gmail.com\",\n        \"password\": \"$2b$10$honMsIjw4eahCl147ZSAduX06uqjBoz4Rbsv8IOVrlOcEeVgin5OW\",\n        \"phone\": null,\n        \"location\": null,\n        \"createdAt\": \"2024-02-23T19:46:33.000Z\",\n        \"updatedAt\": \"2024-02-23T19:46:33.000Z\"\n    },\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIsImVtYWlsIjoiaGVtaWwubW9kaTIwMThAZ21haWwuY29tIiwiaWF0IjoxNzA4NzE3NjIyLCJleHAiOjE3MDg3MjEyMjJ9.m6LgIsBkq_GUJqWOFi1TkEhCHp5yz_JkiGGXInzg6dI\"\n}"
						}
					]
				},
				{
					"name": "Get user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIsImVtYWlsIjoiaGVtaWwubW9kaTIwMThAZ21haWwuY29tIiwiaWF0IjoxNzA4NzE3NjIyLCJleHAiOjE3MDg3MjEyMjJ9.m6LgIsBkq_GUJqWOFi1TkEhCHp5yz_JkiGGXInzg6dI",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/getUserById/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"getUserById",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "12"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "Get user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIsImVtYWlsIjoiaGVtaWwubW9kaTIwMThAZ21haWwuY29tIiwiaWF0IjoxNzA4NzE3NjIyLCJleHAiOjE3MDg3MjEyMjJ9.m6LgIsBkq_GUJqWOFi1TkEhCHp5yz_JkiGGXInzg6dI",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/users/getUserById/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"getUserById",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "12"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Resource-Policy",
									"value": "same-origin"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "257"
								},
								{
									"key": "ETag",
									"value": "W/\"101-+fv4f+4NXFgfR3qOGX5FRk/7OfQ\""
								},
								{
									"key": "Date",
									"value": "Fri, 23 Feb 2024 19:47:34 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 12,\n    \"name\": \"hemil\",\n    \"surname\": \"modi\",\n    \"email\": \"hemil.modi2018@gmail.com\",\n    \"password\": \"$2b$10$honMsIjw4eahCl147ZSAduX06uqjBoz4Rbsv8IOVrlOcEeVgin5OW\",\n    \"phone\": null,\n    \"location\": null,\n    \"createdAt\": \"2024-02-23T19:46:33.000Z\",\n    \"updatedAt\": \"2024-02-23T19:46:33.000Z\"\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}